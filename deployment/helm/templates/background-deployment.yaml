apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "danswer-stack.fullname" . }}-background
  labels:
    {{- include "danswer-stack.labels" . | nindent 4 }}
spec:
  {{- if not .Values.background.autoscaling.enabled }}
  replicas: {{ .Values.background.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "danswer-stack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.background.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "danswer-stack.labels" . | nindent 8 }}
        {{- with .Values.background.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "danswer-stack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.background.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.background.securityContext | nindent 12 }}
          image: "{{ .Values.background.image.repository }}:{{ .Values.background.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.background.image.pullPolicy }}
          command: ["/usr/bin/supervisord"]
          resources:
            {{- toYaml .Values.background.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "danswer-stack.fullname" . }}
          env:
            - name: INTERNAL_URL
              value: {{ (list "http://" (include "danswer-stack.fullname" .) "-api:" .Values.api.service.port | join "") | quote }}
            - name: VESPA_HOST
              value: {{ (list (include "danswer-stack.fullname" .) "vespa" | join "-") }}
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_HOST
              value: {{ (list .Release.Name "postgresql" | join "-") }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ (list .Release.Name "postgresql" | join "-") }}
                  key: password
            {{- end }}
          volumeMounts:
            - name: dynamic-storage
              mountPath: /home/storage
            - name: connector-storage
              mountPath: /home/file_connector_storage
          {{- if .Values.background.volumeMounts }}
            {{- .Values.background.volumeMounts | toYaml | nindent 12}}
          {{- end }}
      volumes:
        - name: dynamic-storage
          {{- if .Values.persistence.dynamic.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.dynamic.existingClaim | default (list (include "danswer-stack.fullname" .) "dynamic" | join "-") }}
          {{- else }}
          emptyDir: { }
          {{- end }}
        - name: connector-storage
          {{- if .Values.persistence.connector.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.connector.existingClaim | default (list (include "danswer-stack.fullname" .) "connector" | join "-") }}
          {{- else }}
          emptyDir: { }
          {{- end }}
        {{- if .Values.background.volumes }}
          {{- .Values.background.volumes | toYaml | nindent 8}}
        {{- end }}
      {{- with .Values.background.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.background.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.background.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
